model Absence {
    db_id           String @id @default(cuid())
    colaboratorId   String
    start_date      DateTime
    end_date        DateTime
    valid           Boolean

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    // Relation with User table
    colaborator  User @relation("Absence_Colaborator", fields: [colaboratorId], references: [id], map: "absence_colaborator_fk")

    // Inverse relation with Requested_Absence table 
    requestedAbsence Requested_Absence? @relation("Parent_Absence")
    // Inverse relation with Spontaneous_Absence table
    spontaneousAbsence Spontaneous_Absence? @relation("Spontaneous_Absence")
}

model Requested_Absence {
  absence_id    String   @id
  status        String
  aprover       String
  decision_date DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Absence table relation
  absence Absence @relation("Parent_Absence", fields: [absence_id], references: [db_id], map: "requested_absence_fk")
  // Status table relation
  currentStatus Request_Status @relation("Requested_Absence_Status", fields: [status], references: [db_id], map: "requested_absence_status_fk")
  // User table relation
  aproverUser User @relation("Requested_Absence_Aprover", fields: [aprover], references: [id], map: "requested_absence_aprover_fk")
  
  // Inverse relation with Vacation_Absence
  vacationAbsence Vacation_Absence? @relation("Requested_Absence")
  // Inverse relation with Informal_Absence
  informalAbsence Informal_Absence? @relation("Informal_Absence")
}

model Vacation_Absence {
  absence_id    String   @id
  policy_under  String

  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // Absence table relation
  requestedAbsence Requested_Absence @relation("Requested_Absence", fields: [absence_id], references: [absence_id], map: "vacation_absence_fk")
}

model Informal_Absence {
  absence_id String @id
  created_at DateTime
  updated_at DateTime

  // Relation with Requested_Absence
  requestedAbsence Requested_Absence @relation("Informal_Absence", fields: [absence_id], references: [absence_id], map: "informal_absence_fk")

  // Inverse relation with Justification
  justifications Justification? @relation("Informal_Absence_Justification")
}

model Spontaneous_Absence {
  absence_id String @id
  comments String
  created_at DateTime
  updated_at DateTime

  // Relation with Absence
  requestedAbsence Absence @relation("Spontaneous_Absence", fields: [absence_id], references: [db_id], map: "spontaneous_absence_fk")

  // Relaci√≥n inversa con Justification
  justifications Justification? @relation("Spontaneous_Absence_Justification")
}

model Justification {
  absence_id String @id
  description String
  media Json?
  uploaded_at DateTime
  comments String?
  created_at DateTime
  updated_at DateTime

  // Reation with Informal_Absence table
  informal_absence Informal_Absence? @relation("Informal_Absence_Justification", fields: [absence_id], references: [absence_id], map: "informal_absence_justification_fk")
  // Relation with Spontaneous_Absence table
  spontaneous_absence Spontaneous_Absence? @relation("Spontaneous_Absence_Justification", fields: [absence_id], references: [absence_id], map: "spontaneous_absence_justification_fk")
}

