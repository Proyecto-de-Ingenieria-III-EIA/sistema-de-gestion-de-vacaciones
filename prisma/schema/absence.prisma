model Absence {
    db_id           String @id @default(cuid())
    colaborator     User   @relation("Absence_Colaborator", fields: [colaboratorId], references: [id])
    colaboratorId   String
    start_date      DateTime
    end_date        DateTime
    valid           Boolean

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Justification {
  absence_id String @id
  description String
  media Json?
  uploaded_at DateTime
  comments String?
  created_at DateTime
  updated_at DateTime

  // Relación con la tabla de ausencias (Absence)
  informal_absence Informal_Absence? @relation("Informal_Absence_Justification", fields: [absence_id], references: [absence_id], map: "informal_absence_justification_fk")
  spontaneous_absence Spontaneous_Absence? @relation("Spontaneous_Absence_Justification", fields: [absence_id], references: [absence_id], map: "informal_absence_justification_fk")
}

model Informal_Absence {
  absence_id String @id @default(cuid()) @unique
  created_at DateTime
  updated_at DateTime

  // Relación inversa con Justification
  justifications Justification? @relation("Informal_Absence_Justification")
}

model Spontaneous_Absence {
  absence_id String @id @default(cuid()) @unique
  comments String
  created_at DateTime
  updated_at DateTime

  // Relación inversa con Justification
  justifications Justification? @relation("Spontaneous_Absence_Justification")
}