model Absence {
  dbId               String              @id @default(cuid()) @map("db_id")
  startDate          DateTime            @map("start_date")
  endDate            DateTime            @map("end_date")
  colaboratorId      String              @map("colaborator_id")
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt @map("updated_at")
  createdBy          String              @map("created_by")
  reviewer           String              @map("reviewer")
  colaborator        User                @relation("Absence_Colaborator", fields: [colaboratorId], references: [id], map: "absence_colaborator_fk")
  creator            User                @relation("Absence_Creator", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "absence_creator_fk")
  reviewerUser       User                @relation("Absence_Reviewer", fields: [reviewer], references: [id], map: "absence_reviewer_fk")
  justification      Justification?      @relation("Absence_Justification")
  requestedAbsence   RequestedAbsence?   @relation("Parent_Absence")
  spontaneousAbsence SpontaneousAbsence? @relation("Spontaneous_Absence")

  @@map("Absence")
}

model RequestedAbsence {
  absenceId       String           @id @default(cuid()) @map("absence_id")
  status          String           @map("status")
  decisionDate    DateTime?        @map("decision_date")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  informalAbsence InformalAbsence? @relation("Informal_Absence")
  absence         Absence          @relation("Parent_Absence", fields: [absenceId], references: [dbId], map: "requested_absence_fk")
  currentStatus   RequestStatus    @relation("Requested_Absence_Status", fields: [status], references: [dbId], map: "requested_absence_status_fk")
  vacationAbsence VacationAbsence? @relation("Requested_Absence")

  @@map("Requested_Absence")
}

model VacationAbsence {
  absenceId        String           @id @map("absence_id")
  policyUnder      String           @map("policy_under")
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  requestedAbsence RequestedAbsence @relation("Requested_Absence", fields: [absenceId], references: [absenceId], map: "vacation_absence_fk")
  policy           VacationPolicy   @relation("Vacation_Policy", fields: [policyUnder], references: [dbId], map: "vacation_policy_fk")

  @@map("Vacation_Absence")
}

model InformalAbsence {
  absenceId        String           @id @map("absence_id")
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  requestedAbsence RequestedAbsence @relation("Informal_Absence", fields: [absenceId], references: [absenceId], map: "informal_absence_fk")

  @@map("Informal_Absence")
}

model SpontaneousAbsence {
  absenceId     String                   @id @map("absence_id")
  comments      String                   @map("comments")
  createdAt     DateTime                 @default(now()) @map("created_at")
  updatedAt     DateTime                 @updatedAt @map("updated_at")
  status        String                   @map("status")
  parentAbsence Absence                  @relation("Spontaneous_Absence", fields: [absenceId], references: [dbId], map: "spontaneous_absence_fk")
  absenceStatus SpontaneousAbsenceStatus @relation("Spontaneous_Absence_Status", fields: [status], references: [dbId], map: "spontaneous_absence_status_fk")

  @@map("Spontaneous_Absence")
}

model Justification {
  absenceId   String   @id @map("absence_id")
  description String   @map("description")
  media       String?  @map("media")
  uploadedAt  DateTime @map("uploaded_at")
  comments    String?  @map("comments")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt
  absence     Absence  @relation("Absence_Justification", fields: [absenceId], references: [dbId], map: "absence_justification_fk")

  @@map("Justification")
}
